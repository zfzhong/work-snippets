1/1
======
1. Created 'batch_details.html', wrote a simple batch_detail() view. Got the following error:
   ".accepted_renderer not set on Response". Need to figure it out.
2. Need to proper design the 'batch_details.html' page, and the actions to edit the batch (change mode, delete problems, etc)
3. Have a raw page of 'batch_details.html'. Still need to implement a) editing the mode of a batch, and b) deleting/restoring a mathprob from/to a batch.
4. There are some logics: if a batch is FINALIZED or LOCK mode, the mathprobs of this batch should not be editable; only in OPEN mode, they are editable; Only in the "FINALIZED" mode, the option to generate PDF is available. 

1/8
======
1. Extended AWS disk space to 32G. Installed pdflatex and asymptote. Batch PDF generation is working. Still need to figure out how to download the PDF and restrict permission for downloading.
2. We can create a batch and then generate PDF and download. Still, we need to work on editing batch name, notes, etc. We need to have a page to display multiple problems (about 10) on a single page for a given source (AMC8-2024).
3. Started to create a GpsData model to store all GPS data over time for the robotics project.

1/9
======
1. Got an strange error that when I run 'python manage.py runserver localhost:8000', the server didn't server /static/rest_framework/css/default.css; I didn't know what the problem was until I found out the I have to set 'DEBUG=True' in order for Django to  auto serve static files. I put a typo 'DBUG=True'. It took me hours to realize it.

1/11
======
1. Implemented basic delete/restore button for a Batch. Added fadeOut effect upon success batching a problem.
2. To make batching more effectively, I should put a 'next/prev' button on each problem page so that we can easily navigate to the next or previous problem from a source.

1/13
======
1. Redesign the answer/datablock for Kaleidoscope: an answer might consists of multiple data blocks. We might need another week to implement it.
2. Need to do literature research for image-based human volume estimation.

1/15
======
1. Following Titon's recommendation, I started to play with Clojure. It would take some time for me to learn this language. I found some toy applications built using Clojure and Redis. Probably it's time for me to learn them.
2. Wrote script to read a MathProblem from database and split into a TexBody and an AnswerGroup. The AnswerGroup tex need to be standardized. The design is to decompose an AnswerGroup into several answers, but when we reassemble these answers, the tex generated would be standardized.
3. Did a bit math about polygons: last night WZ's homework has several problems about regular octagon. We initially didn't realized that a regular octagon is just a square after cutting its 4 corners. So given the side length of a regular polygon, how to calculate its area by elementary geometry methods? It's easy for hexagon and octagon, but it's a bit hard for pentagon. It's not possible for heptagon (without trigonometry).

1/16
====
1. Created the TexBody and AnswerGroup models for kaleidoscope, wrote scriptes to populate the two tables. Found some issues with the raw tex of math problems. Fixed them. Pushed the changes to aws.
2. Went to dentist for teeth cleaning this morning.

1/17
======
1. Spent whole morning to prepare the literature for BVE.
2. Meeting whole day. Srihai told 2 BLE ideas.

1/18
======
1. Finished script to decompose AnswerGroup into AnswerChoice. Tested.

1/21
======
1. Finished script 'update_mathproblem.py', and I believe this is useful, since I found there are multiple errors in the latex source. It's hard to realize them if we dont decompose them into different structures (texbody, answergroup, answerchoice, etc)
2. Finished decomposing all AMC8 (1999-2024) problems into TexBody, AnswerGroup, and AnswerChoice. The next step is to decompose TexBody and AnswerChoice to datablocks and generate images. Hopefully, by next week we can decompose them into datablocks. This also require a new design for the datablocks.

1/22
======
1. Played with datablock code, it worked well (I wrote it in china, 3 years ago). Now I need to change the design of TexBody/AnswerGroup/AnswerBody to add a field 'prob_key', which is readable and will be good for debugging purpose (maintainance in the future).
